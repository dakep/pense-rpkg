% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/elnet.R
\name{elnet}
\alias{elnet}
\title{Elastic Net Regression}
\usage{
elnet(X, y, alpha, lambda, weights, intercept = TRUE, addLeading1s = TRUE,
  options = en_options_aug_lars())
}
\arguments{
\item{X}{data matrix with predictors}

\item{y}{response vector}

\item{alpha, lambda}{values for the parameters controlling the penalization}

\item{weights}{an optional vector of weights to be used in the fitting
process. Should be \code{NULL} or a numeric vector. If non-NULL,
weighted EN is used with weights \code{weights}. See also 'Details'.}

\item{intercept}{should an intercept be estimated?}

\item{addLeading1s}{should a leading column of 1's be appended?
If \code{FALSE}, this has to be done before calling this function.}

\item{options}{additional options for the EN algorithm. See
\code{\link{en_options}} for details.}
}
\value{
\item{coefficients}{The regression coefficients}
        \item{residuals}{The residuals}
        \item{converged}{Did the algorithm converge?}
}
\description{
Compute the elastic net regression coefficients
}
\details{
This solves the minimization problem
\deqn{\frac{1}{2 N} RSS + \lambda \left( \frac{(1 - \alpha)} {2} \| \beta \|_2^2 + \alpha \| \beta \|_1 \right)}{
     (1/2N) RSS + \lambda * ( (1 - \alpha) / 2 * L2(\beta)^2 + \alpha * L1(\beta) )}

If weights are supplied, the minimization problem becomes
\deqn{\frac{1}{2 N} \sum_{i = 1}^n w_i r_i^2 + \lambda \left( \frac{(1 - \alpha)} {2} \| \beta \|_2^2 + \alpha \| \beta \|_1 \right)}{
     (1/2N) sum(w * (y - r^2) + \lambda * ( (1 - \alpha) / 2 * L2(\beta)^2 + \alpha * L1(\beta) )}
}
