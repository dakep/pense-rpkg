% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/elnet.R
\name{elnet}
\alias{elnet}
\title{Elastic Net Regression}
\usage{
elnet(X, y, alpha, lambda, weights, maxit = 10000, eps, centering = TRUE,
  addLeading1s = TRUE, en.algorithm = c("augmented-lars",
  "coordinate-descent", "augmented-lars-gram", "augmented-lars-nogram"))
}
\arguments{
\item{X}{The data matrix X}

\item{y}{The response vector}

\item{alpha,lambda}{The values for the parameters controlling the penalization}

\item{weights}{an optional vector of weights to be used in the fitting process. Should be
\code{NULL} or a numeric vector. If non-NULL, weighted EN is used with weights
\code{weights} See also 'Details'.}

\item{maxit}{The maximum number of iterations}

\item{eps}{The relative tolerance for convergence for gradient-descent (default 1e-8) or
the threshold for treating numbers as 0 in LARS (default \code{.Machine$double.eps})}

\item{centering}{Should the rows be centered first}

\item{addLeading1s}{Should a leading column of 1's be appended? If \code{FALSE}, this has
to be done before calling this function.}

\item{en.algorithm}{algorithm to use to compute the elastic net solution.}
}
\value{
\item{coefficients}{The regression coefficients}
        \item{residuals}{The residuals}
        \item{converged}{Did the algorithm converge?}
}
\description{
Compute the elastic net regression coefficients
}
\details{
This solves the minimization problem
\deqn{\frac{1}{2 N} RSS + \lambda \left( \frac{(1 - \alpha)} {2} \| \beta \|_2^2 + \alpha \| \beta \|_1 \right)}{
     (1/2N) RSS + \lambda * ( (1 - \alpha) / 2 * L2(\beta)^2 + \alpha * L1(\beta) )}

If weights are supplied, the minimization problem becomes
\deqn{\frac{1}{2 N} \sum_{i = 1}^n w_i r_i^2 + \lambda \left( \frac{(1 - \alpha)} {2} \| \beta \|_2^2 + \alpha \| \beta \|_1 \right)}{
     (1/2N) sum(w * (y - r^2) + \lambda * ( (1 - \alpha) / 2 * L2(\beta)^2 + \alpha * L1(\beta) )}
}

