% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/pense.R
\name{pense}
\alias{pense}
\alias{pense.default}
\title{Penalized Elasitc Net S-estimators for Regression}
\usage{
pense(x, ...)

\method{pense}{default}(x, y, alpha = 0.5, lambda = NULL, nlambda = 100,
  standardize = TRUE, cv.k = 5, ncores = getOption("mc.cores", 2L),
  control = pense.control())
}
\arguments{
\item{x}{the design matrix}

\item{y}{the response vector.}

\item{alpha}{the elastic net mixing parameter with \eqn{0 \leq \alpha \leq 1}.
\code{alpha = 1} is the lasso penatly, and \code{alpha = 0} the ridge penalty.}

\item{lambda}{a single value or a grid of values for the regularization parameter lambda.
Assumed to be on the same scale as the data and adjusted for S-estimation.
Defaults to \code{NULL}, which means a grid of lambda values is automatically
generated (see parameter \code{nlambda}).
If given and \code{standardize = TRUE}, the lambda values will be adjusted
accordingly.}

\item{nlambda}{if \code{lambda} is not given or \code{NULL}, a grid of \code{nlambda} lambda
values is generated based on the data.}

\item{standardize}{should the data be standardized robustly? Estimates
are returned on the original scale. Defaults to \code{TRUE}.}

\item{cv.k}{the number of cross-validation segements to use to choose the optimal
lambda from the grid. If only a single value of lambda is given, this argument
is ignored.}

\item{ncores}{the number of processor cores to use to estimate the optimal value of lambda.
See details for more information.}

\item{control}{a list of control parameters as returned by \code{\link{pense.control}}.}
}
\value{
An object of class \code{"pense"} with elements
\item{call}{the call that produced this object.}
\item{lambda.opt}{the optimal value of the regularization parameter according to CV.}
\item{coefficients}{the vector of coefficients for the optimal lambda \code{lambda.opt}.}
\item{residuals}{the residuals, that is response minus fitted values for \code{lambda.opt}.}
\item{scale}{the estimated scale for \code{lambda.opt}.}
\item{lambda.grid}{a 2-column matrix with values of lambda in the first column and the
                   tau-scale estimated via CV in the second column.}
\item{alpha}{the value of \code{alpha} the estimatr was run with.}
}
\description{
Penalized Elasitc Net S-estimators for Regression
}
\section{Parallelization}{

With the parameter \code{ncores}, the number of available processor cores can be set.
The grid of lambda values is split into \code{ncores} (almost) equally sized chunks.
On each core, the cold initial estimate is computed for the lower endpoint of the
lambda sequence. The fully iterated PENSE estimate is then used as warm-start
for the next lambda value and so on. Therefore, if \code{ncores = 1}, only one
cold initial estimate is computed and all subsequent values of lambda take the
previous estimate as warm-start. Similarly, if \code{ncores = nlambda}, a
cold initial estimate is computed for every lambda on the grid and no warm-starts
are necessary.
}

