% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pensem.R
\name{pensem}
\alias{pensem}
\alias{pensem.default}
\alias{pensem.pense}
\title{Perform an M-step after the EN S-Estimator}
\usage{
pensem(x, ...)

\method{pensem}{default}(x, y, alpha = 0.5, nlambda = 50, lambda, lambda_s,
  lambda_min_ratio, standardize = TRUE, initial = c("warm", "cold"),
  warm_reset = 10, cv_k = 5, cv_objective, ncores = getOption("mc.cores",
  1L), cl = NULL, s_options = pense_options(),
  mm_options = mstep_options(), init_options = initest_options(),
  en_options = en_options_aug_lars())

\method{pensem}{pense}(x, alpha, scale, nlambda = 50, lambda,
  lambda_min_ratio, standardize, cv_k = 5, cv_objective,
  ncores = getOption("mc.cores", 1L), cl = NULL,
  mm_options = mstep_options(), en_options, x_train, y_train)
}
\arguments{
\item{y}{numeric response vector.}

\item{nlambda}{if \code{lambda} is not given,
a grid of \code{nlambda} lambda values is generated based on the data.}

\item{lambda}{a single value or a grid of values for the regularization
parameter of the M-step.
Assumed to be on the same scale as the data.
If missing, a grid of lambda
values is automatically generated (see parameter \code{nlambda}).
If supplied and \code{standardize = TRUE}, the lambda values will be
adjusted accordingly.}

\item{lambda_s}{regularization parameter for the \emph{S-estimator}.
If missing, a grid of lambda values is chosen automatically.
If \code{standardize = TRUE}, the lambda values will be
adjusted accordingly.}

\item{initial}{how to initialize the estimator at a new lambda in the grid.
The default, \code{"warm"}, computes a cold initial estimator at several
lambda values and uses the PENSE coefficient to warm-start the
estimator at the next larger lambda value. At the largest value in
the lambda grid, PENSE will be initialized with the 0-vector.
\code{"cold"} computes the full initial estimator at
every lambda value.}

\item{warm_reset}{if \code{initial = "warm"} (default), how many cold initial
estimates be computed?}

\item{cv_k}{perform k-fold CV to choose the optimal lambda for prediction.}

\item{ncores, cl}{use multiple cores or the supplied cluster for the
cross-validation. See \code{\link{pense}} for more details.}

\item{s_options}{additional options for the PENSE algorithm.
See \code{\link{pense_options}} for details.}

\item{mm_options}{additional options for the M-step.}

\item{scale}{initial scale estimate for the M step. By default the
S-scale from the initial estimator (\code{penseobj}) is used.}

\item{x_train, y_train}{override arguments
provided to the original call to \code{\link{pense}}.}

\item{lambda}{regularization parameter for the MM-estimator.
If missing, a grid of lambda values is chosen automatically.}

\item{initest_options}{additional options for computing the cold initial
estimates.
Ignored if \code{initial = "warm"} and \code{warm_reset = 0}.
See \code{\link{initest_options}} for details.}

\item{scale}{initial scale estimate for the M step. By default the
S-scale from the initial estimator (\code{penseobj}) is used.}
}
\value{
An object of class \code{"pensem"}. All elements as an object
     of class \code{\link{pense}} as well as the following:
\item{init_scale}{the initial scale estimate used in the M step.}
\item{sest}{the PENSE estimate used to initialze the M step.}
\item{bdp}{breakdown point of the MM-estimator.}
}
\description{
Compute the PENSEM estimate, an efficient and robust
elastic net estimator for linear regression.

Refine an already computed PENSE with an additional M-step
}
\details{
Performs an M-step using the S-estimator at the optimal penalty
parameter as returned from \code{\link{pense}} as the initial
estimate. For "fat" datasets, the initial scale as returned by the
S-estimate is adjusted according to Maronna & Yohai (2010).
}
\references{
Maronna, R. and Yohai, V. (2010).
     Correcting MM estimates for "fat" data sets.
     \emph{Computational Statistics & Data Analysis},
     \bold{54}:31683173.
}
\seealso{
\code{\link{pense}} to compute only the S-estimator.
}
